name: Deploy Docker Container

on: workflow_dispatch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: SSH and Docker
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Install Docker and Docker-Compose
      run: |

        # Iniciar um prompt para o console
        #set -x
        echo "Iniciando Deploy" >> /home/monga/log.txt && echo "Iniciando Deploy"
        echo "Deploy em $(date +"%d%m%y-%HH%M")" >> /home/monga/log.txt && echo "Deploy em $(date +"%d%m%y-%HH%M")"
        sudo -u monga echo "Usuário Atual - $(whoami)" >> /home/monga/log.txt && echo "Usuário Atual - $(whoami)"
        sudo apt update && sudo apt upgrade -y

        # Passo Atualizar Ubuntu
        # Atualizar repositórios de aplicativos
        sudo apt-get update
        sudo apt-get upgrade
        # # # # # # # # # # #

        # Workflow Repositório - {Clonar - ou Atualizar}
        # Verificar se o repositório 'monga-server-handle' existe
        if [ -d "/home/monga/monga-server-handle" ]; then
          # Repositório 'monga-server-handle' encontrado! Atualizando...
          echo "Repositório 'monga-server-handle' encontrado! Atualizando..." >> /home/monga/log.txt && echo "Repositório 'monga-server-handle' encontrado! Atualizando..."
          # Git Pull
          sudo -u monga bash -c "cd ~/monga-server-handle && git fetch --all && git reset --hard origin/master && git pull origin master"
        else
          # Repositório 'monga-server-handle' não existe. Clonando...
          echo "Repositório 'monga-server-handle' não existe. Clonando..." >> /home/monga/log.txt && echo "Repositório 'monga-server-handle' não existe. Clonando..."
          # Clonar Repositório Git
          sudo -u monga bash -c "git clone https://github.com/pobruno/monga-server-handle ~/monga-server-handle"
        fi

        # Workflow Docker Container - {Deploy}
        # Verificar se o Docker está instalado
        if ! command -v docker &> /dev/null; then
          # Docker não instalado. Instalando...
          echo "Instalando Docker..." >> /home/monga/log.txt && echo "Instalando Docker..."
          # Instalar Docker no Ubuntu 20.04
          echo "Instalando Docker" >> /home/monga/log.txt && echo "Instalando Docker"
          sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt update
          sudo apt install -y docker-ce
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker $USER

          # Verificação apenas: Testar a instalação do Docker
          if command -v docker &> /dev/null; then
            echo "Docker instalado com sucesso!" >> /home/monga/log.txt && echo "Docker instalado com sucesso!"
            echo "Versão- $(docker --version)" >> /home/monga/log.txt && echo "Versão- $(docker --version)"
          else
            echo "Erro ao instalar o Docker" >> /home/monga/log.txt && echo "Erro ao instalar o Docker"
          fi
        else
          # Docker já instalado
          echo "Docker já instalado" >> /home/monga/log.txt && echo "Docker já instalado"
          echo "Versão- $(docker --version)" >> /home/monga/log.txt && echo "Versão- $(docker --version)"
        fi

        # Workflow Docker-Compose - {Instalar}
        # Verificar se o Docker-Compose está instalado
        if ! command -v docker-compose &> /dev/null; then
          # Docker-Compose não instalado. Instalando...
          echo "Instalando Docker-Compose..." >> /home/monga/log.txt && echo "Instalando Docker-Compose..."
          # Instalar Docker-Compose no Ubuntu 20.04 (usuário 'monga')
          sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update
          sudo apt install docker-ce docker-ce-cli containerd.io
          curl -fsSL https://get.docker.com | bash
          sudo usermod -aG docker ${{ secrets.SERVER_USERNAME }}
          sudo systemctl enable docker

          # Verificação apenas: Instalação do Docker-Compose
          if command -v docker-compose &> /dev/null; then
            echo "Docker-Compose instalado com sucesso!" >> /home/monga/log.txt && echo "Docker-Compose instalado com sucesso!"
            echo "Versão- $(docker-compose --version)" >> /home/monga/log.txt && echo "Versão- $(docker-compose --version)"
          else
            echo "Erro ao instalar o Docker-Compose" >> /home/monga/log.txt && echo "Erro ao instalar o Docker-Compose"
          fi
        else
          # Docker-Compose já instalado
          echo "Docker-Compose já instalado" >> /home/monga/log.txt && echo "Docker-Compose já instalado"
          echo "Versão- $(docker-compose --version)" >> /home/monga/log.txt && echo "Versão- $(docker-compose --version)"
        fi

        # Passo Atualizar Ubuntu
        # Atualizar repositórios de aplicativos
        sudo apt-get update
        sudo apt-get upgrade
        # # # # # # # # # # #

        # Workflow Portainer Web
        # Verificar se o contêiner Docker 'portainer-web-docker' existe
        if ! docker ps -q --filter "name=portainer-web-docker" &> /dev/null; then
          # Contêiner 'portainer-web-docker' não existe. Criando...
          echo "Contêiner 'portainer-web-docker' não existe. Criando..." >> /home/monga/log.txt && echo "Contêiner 'portainer-web-docker' não existe. Criando..."
          docker run -d -p 9090:9090 --name portainer-web-docker -v data:/data -v /var/run/docker.sock:/var/run/docker.sock portainer/portainer --restart unless-stopped
        else
          # Contêiner 'portainer-web-docker' existe.
          echo "Contêiner 'portainer-web-docker' existe." >> /home/monga/log.txt && echo "Contêiner 'portainer-web-docker' existe."
          docker ps -q --filter "name=portainer-web-docker" >> /home/monga/log.txt && docker ps -q --filter "name=portainer-web-docker"
        fi

        # Workflow Perfil Terminal
        # Configurar completamente o perfil do terminal Ubuntu
        echo "Configurando Perfil do Terminal"
        echo $(pwd)
        cd /home/monga/monga-server-handle/server-config/Server-Ubuntu
        sudo ./install_powerline.sh
        sudo ./install_terminal.sh
        sudo ./install_profile.sh

        # Finalizar /home/monga/log.txt
        echo "Finalizando Deploy" >> /home/monga/log.txt && echo "Finalizando Deploy"
        cat /home/monga/log.txt
        LogTime=$(date +"%d%m%y-%HH%M") && mv /home/monga/log.txt $LogTime.txt


        # Clone Git Repository
        #pwd >> /home/monga/log.txt
        #echo $(pwd)
        #cd /home/monga/
        #echo "Git Clone monga-server-handle - $(pwd)" >> /home/monga/log.txt && echo "Git Clone monga-server-handle - $(pwd)"
        #git clone https://github.com/pobruno/monga-server-handle
        #cd /home/monga/monga-server-handle/server-config/Server-Ubuntu
        
        # Install Docker and Docker-Compose on Ubuntu 20.04 with best practices
        #curl -fsSL https://get.docker.com -o get-docker.sh
        #sudo sh get-docker.sh
        #sudo usermod -aG docker $USER
        #sudo systemctl enable docker
        #sudo apt-get install -y docker-compose
        #sudo systemctl enable docker-compose

        # Disable debug mode
        set +x



        



      